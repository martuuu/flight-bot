#!/usr/bin/env node
/**
 * Script para diagnosticar el problema espec√≠fico con Google OAuth
 */

const dotenv = require('dotenv');
const path = require('path');

dotenv.config({ path: path.join(__dirname, 'webapp', '.env') });

async function diagnosticarOAuthError() {
    console.log('\nüîç DIAGN√ìSTICO DETALLADO DE GOOGLE OAUTH ERROR\n');
    
    const clientId = process.env.GOOGLE_CLIENT_ID;
    const clientSecret = process.env.GOOGLE_CLIENT_SECRET;
    const baseUrl = process.env.NEXTAUTH_URL;
    
    console.log('üìã Configuraci√≥n actual:');
    console.log(`   Client ID: ${clientId}`);
    console.log(`   Tiene Client Secret: ${clientSecret ? 'S√ç' : 'NO'}`);
    console.log(`   Base URL: ${baseUrl}`);
    
    // Test 1: Verificar que el error espec√≠fico sigue ah√≠
    console.log('\n1Ô∏è‚É£ Verificando error actual...');
    try {
        const response = await fetch(`${baseUrl}/api/auth/signin/google`, {
            redirect: 'manual'
        });
        
        const location = response.headers.get('location');
        console.log(`   Status: ${response.status}`);
        console.log(`   Location: ${location}`);
        
        if (location && location.includes('error=google')) {
            console.log('   ‚ùå Confirma: error=google persiste');
        } else if (location && location.includes('accounts.google.com')) {
            console.log('   ‚úÖ ¬°Se solucion√≥! Redirige a Google');
            return;
        }
    } catch (error) {
        console.log(`   ‚ùå Error de red: ${error.message}`);
    }
    
    // Test 2: Posibles causas
    console.log('\n2Ô∏è‚É£ Posibles causas del problema:');
    
    console.log('\n   üìç Verificaci√≥n de URIs de redirecci√≥n:');
    console.log('   En Google Cloud Console debe estar configurado:');
    console.log('   ‚úì Authorized JavaScript origins: http://localhost:3000');
    console.log('   ‚úì Authorized redirect URIs: http://localhost:3000/api/auth/callback/google');
    
    console.log('\n   üìç APIs que deben estar habilitadas:');
    console.log('   ‚úì Google+ API (o People API)');
    console.log('   ‚úì Google OAuth2 API');
    
    console.log('\n   üìç OAuth Consent Screen:');
    console.log('   ‚úì Debe estar configurado como "External"');
    console.log('   ‚úì Tu email debe estar en "Test users"');
    
    // Test 3: Recomendaciones espec√≠ficas
    console.log('\n3Ô∏è‚É£ Pr√≥ximos pasos recomendados:');
    console.log('\n   üîß Verificar en Google Cloud Console:');
    console.log('   1. Ve a APIs & Services > Credentials');
    console.log('   2. Edita tu OAuth 2.0 Client ID');
    console.log('   3. Verifica que las URIs sean EXACTAMENTE:');
    console.log('      - JavaScript origins: http://localhost:3000');
    console.log('      - Redirect URIs: http://localhost:3000/api/auth/callback/google');
    console.log('   4. Guarda los cambios');
    
    console.log('\n   üìù Tambi√©n verifica:');
    console.log('   ‚Ä¢ Que el proyecto est√© seleccionado correctamente');
    console.log('   ‚Ä¢ Que las APIs est√©n habilitadas');
    console.log('   ‚Ä¢ Que el OAuth consent screen est√© configurado');
    
    console.log('\n4Ô∏è‚É£ Si todo est√° correcto y sigue fallando:');
    console.log('   ‚Ä¢ Puede tomar unos minutos en propagarse los cambios');
    console.log('   ‚Ä¢ Intenta crear un nuevo OAuth Client ID');
    console.log('   ‚Ä¢ Verifica que el proyecto no tenga restricciones');
    
    console.log('\n‚úÖ DIAGN√ìSTICO COMPLETADO');
}

diagnosticarOAuthError().catch(console.error);
