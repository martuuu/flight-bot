version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: flight_alerts
      POSTGRES_USER: flight_user
      POSTGRES_PASSWORD: flight_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    ports:
      - "5432:5432"
    networks:
      - flight_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flight_user -d flight_alerts"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flight_network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Adminer para administraci√≥n de base de datos
  adminer:
    image: adminer:4-standalone
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nicu
    networks:
      - flight_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  flight_network:
    driver: bridge
