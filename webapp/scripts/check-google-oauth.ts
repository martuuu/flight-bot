#!/usr/bin/env npx tsx

// Script para verificar r√°pidamente si Google OAuth est√° configurado

async function checkGoogleOAuth() {
  console.log('üîç Verificando configuraci√≥n de Google OAuth...\n')
  
  // Verificar variables de entorno
  const hasClientId = !!process.env.GOOGLE_CLIENT_ID && process.env.GOOGLE_CLIENT_ID !== 'your-google-client-id'
  const hasClientSecret = !!process.env.GOOGLE_CLIENT_SECRET && process.env.GOOGLE_CLIENT_SECRET !== 'your-google-client-secret'
  
  console.log('üìã Variables de entorno:')
  console.log(`   GOOGLE_CLIENT_ID: ${hasClientId ? '‚úÖ Configurado' : '‚ùå No configurado'}`)
  console.log(`   GOOGLE_CLIENT_SECRET: ${hasClientSecret ? '‚úÖ Configurado' : '‚ùå No configurado'}`)
  
  if (!hasClientId || !hasClientSecret) {
    console.log('\n‚ö†Ô∏è  Google OAuth NO est√° configurado')
    console.log('\nüîß Para configurarlo:')
    console.log('   1. Ejecuta: ./setup-google-oauth-production.sh')
    console.log('   2. Sigue la gu√≠a: GOOGLE_OAUTH_PRODUCTION_SETUP.md')
    return false
  }
  
  // Verificar que NextAuth detecte las credenciales
  try {
    const response = await fetch('http://localhost:3000/api/auth/providers')
    if (response.ok) {
      const providers = await response.json()
      const hasGoogle = !!providers.google
      
      console.log('\nüåê Providers de NextAuth:')
      console.log(`   Google: ${hasGoogle ? '‚úÖ Activo' : '‚ùå No detectado'}`)
      console.log(`   Credentials: ${providers.credentials ? '‚úÖ Activo' : '‚ùå No detectado'}`)
      
      if (hasGoogle) {
        console.log('\nüéâ ¬°Google OAuth est√° completamente configurado!')
        console.log('\nüß™ Para probar:')
        console.log('   1. Ve a: http://localhost:3000/auth/signin')
        console.log('   2. Busca el bot√≥n "Continue with Google"')
        console.log('   3. Prueba con tu cuenta de Google real')
        return true
      }
    }
  } catch (error) {
    console.log('\n‚ùå Error: El servidor no est√° corriendo')
    console.log('   Ejecuta: npm run dev')
    return false
  }
  
  console.log('\n‚ùå Google OAuth no est√° funcionando correctamente')
  return false
}

checkGoogleOAuth()
